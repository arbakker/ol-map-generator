import { default as ImageLayer } from 'https://esm.run/ol@6.9.0/src/layer/Image';
import { default as ImageWMS } from 'https://esm.run/ol@6.9.0/src/source/ImageWMS';
import { default as TileLayer } from 'https://esm.run/ol@6.9.0/src/layer/Tile';
import { default as WMTS } from 'https://esm.run/ol@6.9.0/src/source/WMTS';
import { default as WMTSTileGrid } from 'https://esm.run/ol@6.9.0/src/tilegrid/WMTS';
import { get as getProjection } from 'https://esm.run/ol@6.9.0/src/proj';
import { getTopLeft, getWidth } from 'https://esm.run/ol@6.9.0/src/extent';
import { Circle as CircleStyle, Fill, Stroke, Style, Text, Icon } from 'https://esm.run/ol@6.9.0/src/style';
import { default as Map } from 'https://esm.run/ol@6.9.0/src/Map';
import GeoJSON from 'https://esm.run/ol@6.9.0/src/format/GeoJSON';
import { default as VectorSource } from 'https://esm.run/ol@6.9.0/src/source/Vector';
import { default as VectorLayer } from 'https://esm.run/ol@6.9.0/src/layer/Vector';
import WKT from 'https://esm.run/ol@6.9.0/src/format/WKT';
import { Control } from 'https://esm.run/ol@6.9.0/src/control';

{{{ lsControlCode }}}

{{{ mapGeneratorCode }}}

let config = {{{ config }}}
let map
map = new Map({
    target: "map"
})

if (config.lsControlEnabled) {
    if (!customElements.get(LocatieServerControl.name)) {
        customElements.define(
            LocatieServerControl.name,
            LocatieServerControl
        );
    }
    let lsControl = LocatieServerControl.createLsControl();
    lsControl.map = map;
    lsControl.enableLsControl(lsControl);
}
let mapGenerator = new MapGenerator(config, map)
mapGenerator.generateMap()
